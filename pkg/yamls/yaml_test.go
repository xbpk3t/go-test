package yamls

import (
	"fmt"
	"gopkg.in/yaml.v3"
	"regexp"
	"strings"
	"testing"
)

func TestRegex(*testing.T) {
	input := `
- 《沁园春·雪（北国风光）》
- 《沁园春·长沙（独立寒秋）》
- 《卜算子·咏梅（风雨送春归）》
- 《七律·长征（红军不怕远征难）》
- 《忆秦娥·娄山关（西风烈，长空雁叫霜晨月）》
- 《采桑子·重阳（人生易老天难老）》
- 《菩萨蛮·大柏地（赤橙黄绿青蓝紫）》
- 《十六字令（山，快马加鞭未下鞍）》
- 《清平乐·六盘山（天高云淡）》
- 《清平乐 会昌（东方欲晓，莫道君行早。踏遍青山人未老，风景这边独好。）》
- 《七律·人民解放军占领南京（钟山风雨起苍黄）》
- 《水调歌头·游泳（才饮长沙水，又食武昌鱼）》
- 《浪淘沙·北戴河（大雨落幽燕，白浪滔天，秦皇岛外打渔船）》
- 《蝶恋花·答李淑一（我失骄杨君失柳）》
- 《七绝·改西乡隆盛诗赠父亲（孩儿立志出乡关）》
- 《七律·和柳亚子先生（饮茶粤海未能忘）》
- 《浣溪沙·和柳亚子先生（长夜难明赤县天）》
- 《念奴娇·昆仑（横空出世）》
- 《七律二首·送瘟神（春风杨柳万千条）》
- 《七律·洪都（到得洪都又一年）》
- 《七律 读〈封建论〉，呈郭老（劝君少骂秦始皇）》
- 《贺新郎 读史（人猿相揖别）》
- 《西江月 井冈山（山下旌旗在望）》
- 《七律 有所思（正是神都有事时）》
- 《菩萨蛮 黄鹤楼（茫茫九派流中国）》
- 《水调歌头 重上井冈山（久有凌云志，重上井冈山）》
- 《七律 到韶山（别梦依稀咒逝川）》
- 《满江红 和郭沫若同志（小小寰球，有几个苍蝇碰壁。... 要扫除一切害人虫，全无敌。）》 # 《满江红（沧海横流，方显英雄本色。人六亿，加强团结，坚持原则，天垮下来擎得住，世披靡矣扶之直。听雄鸡一唱遍寰中，东方白。）》郭沫若
- 《七绝 为李进同志题所摄庐山仙人洞照（暮色苍茫看劲松）》
- 《西江月 秋收起义（军叫工农革命）》
- 《七绝 咏蛙（独坐池塘如虎踞）》
- 《七绝 贾谊（贾生才调更无伦）》
- 《七绝 炮打司令部（人民胜利今何在）》
- 《六言诗·给彭德怀同志（山高路远坑深）》
- 《七律·咏贾谊（少年倜傥廊庙才）》
- 《七律·将革命进行到底（古今多少苍茫事）》
- 《渔家傲·反第一次大“围剿”（万木霜天红烂漫）》
- 《渔家傲·反第二次大“围剿”（白云山头云欲立，白云山下呼声急）》


`

	// 调整后的正则表达式
	pattern := `^-?\s*《([^（》]+)(?:（[^）]+）)*（([^）]+)）.*?》\s*(\S*)$`
	// 编译正则表达式
	re, err := regexp.Compile(pattern)
	if err != nil {
		fmt.Printf("正则表达式编译错误: %v\n", err)
		return
	}

	// 按行分割输入
	lines := strings.Split(input, "\n")
	var results []map[string]string

	for _, line := range lines {
		// 查找匹配项
		matches := re.FindStringSubmatch(line)
		if len(matches) >= 3 {
			// 提取匹配组内容
			name := matches[1]
			content := matches[2]
			author := matches[3]

			// 构建单个结果
			result := map[string]string{
				"name":    name,
				"content": content,
				"author":  author,
			}
			results = append(results, result)
		}
	}

	// 将数据转换为 YAML 格式
	yamlData, err := yaml.Marshal(results)
	if err != nil {
		fmt.Printf("转换为 YAML 时出错: %v\n", err)
		return
	}

	// 输出 YAML 数据
	fmt.Println(string(yamlData))
}
